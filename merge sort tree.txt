#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
typedef long long ll;
typedef long double ld;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define mod 1000000007
#define inf 1000000000000000
#define bpc(x) __builtin_parityll(x)
#define autoit(x,it) for(auto it = x.begin(); it != x.end(); it++)
#define rep(n) for(ll i = 0; i < n; i++)
#define repi(i,n) for(ll i = 0; i < n; i++)

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 

#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 

using namespace std;

void build(vector<ll> st[], ll l, ll r, ll i, ll arr[])
{
    if(l == r)
    {
        st[i].pb(arr[l]);
        return;
    }
    
    ll mid = (l+r)/2;
    build(st,l,mid,2*i+1,arr);
    build(st,mid+1,r,2*i+2,arr);
    ll p1 = 0, p2 = 0;
    ll l1 = mid-l+1;
    ll l2 = r-mid;
    
    while(p1<l1 || p2<l2)
    {
        if(p2 == l2)
        {
            st[i].pb(st[2*i+1][p1++]);
            continue;
        }
        
        if(p1 == l1)
        {
            st[i].pb(st[2*i+2][p2++]);
            continue;
        }
        
        if(st[2*i+1][p1]<st[2*i+2][p2])
            st[i].pb(st[2*i+1][p1++]);
        else st[i].pb(st[2*i+2][p2++]);        
    }
    
}

ll que(vector<ll> st[], ll l, ll r, ll l1, ll r1, ll i, ll val)
{
    if(l1>r || l>r1)
        return 0;
    if(l>=l1 && r<=r1)
    {
        ll temp = lower_bound(st[i].begin(), st[i].end(),val) - st[i].begin();
        return max(0ll,temp);    
    }
    
    ll mid = (l+r)/2;
    
    return que(st,l,mid,l1,r1,2*i+1,val) + que(st,mid+1,r,l1,r1,2*i+2,val);
}

int main()
{
   FAST/**/
   
   
   ll ht = ceil(log2(n));
   ht = (1ll<<(ht + 1)) - 1;
   vector<ll> st[ht];
   
   build(st,0,n-1,0,arr);
   
   
   return 0;        
}  
   