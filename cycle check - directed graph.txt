#include <bits/stdc++.h>
#define FAST ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
typedef long long ll;
typedef long double ld;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define mod 1000000007
#define inf 1000000000000000000
#define bpc(x) __builtin_popcountll(x)
#define autoit(x,it) for(auto it = x.begin(); it != x.end(); it++)
#define rep(n) for(ll i = 0; i < n; i++)
#define repi(i,n) for(ll i = 0; i < n; i++)

#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace __gnu_pbds; 

#define ordered_set tree<ll, null_type,less<ll>, rb_tree_tag,tree_order_statistics_node_update> 

using namespace std;

enum Color {WHITE, GRAY, BLACK}; 

bool DFSUtil(ll u, ll color[], vector<ll> adj[]) 
{
    color[u] = GRAY; 

    for (auto i = adj[u].begin(); i != adj[u].end(); ++i) 
    { 
        ll v = *i; 
        if (color[v] == GRAY) 
          return true; 
        if (color[v] == WHITE && DFSUtil(v, color,adj)) 
          return true; 
    } 
    color[u] = BLACK; 
  
    return false; 
} 

bool check(vector<ll> adj[], ll V) 
{ 
    ll *color = new ll[V]; 
    for (ll i = 0; i < V; i++) 
        color[i] = WHITE; 
  
    for (ll i = 0; i < V; i++) 
        if (color[i] == WHITE) 
           if (DFSUtil(i, color,adj) == true) 
              return true; 
  
    return false; 
}